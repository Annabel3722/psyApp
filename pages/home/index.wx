<template>
  <view>
    <view class="container">
    <view class="userinfo">
    <button wx:if="{{!hasUserInfo && canIUse}}" open-type="getUserInfo" bindgetuserinfo="getUserInfo"> 登录 </button>
    <block wx:else>
      <image bindtap="bindViewTap" class="userinfo-avatar" src="{{userInfo.avatarUrl}}" background-size="cover"/>
      <text class="userinfo-nickname">\n\n这里的专业测试\n会帮助你更好地了解自己\n\n\n\n</text>
    </block>
  </view>
  <view class="usermotto">
    <!--<text class="user-motto">{{motto}}</text>-->
    <button size="mini" style='background-color:#afdfe4' disabled="{{disabled}}" bindtap="goto" class="user-motto">联系&&反馈</button>
  </view>
  </view>
  </view>
</template>

<script>
const app = getApp()
export default {
  config: {
    navigationBarTitleText: '心悦琴'
  },
  data: {
    motto: 'Hello World',
    userInfo: {},
    hasUserInfo: false,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
  },
  onShareAppMessage: function () {

  },
  //事件处理函数
  bindViewTap: function() {
    wx.navigateTo({
      url: '../home/index'
    })
  },
  goto:function(e){
    wx.navigateTo({
      url: '../contact/contact',
    })
  },
  onLoad: function () {
    if (app.globalData.userInfo) {
      this.setData({
        userInfo: app.globalData.userInfo,
        hasUserInfo: true
      })
    } else if (this.data.canIUse){
      // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
      // 所以此处加入 callback 以防止这种情况
      app.userInfoReadyCallback = res => {
        this.setData({
          userInfo: res.userInfo,
          hasUserInfo: true
        })
      }
    } else {
      // 在没有 open-type=getUserInfo 版本的兼容处理
      wx.getUserInfo({
        success: res => {
          app.globalData.userInfo = res.userInfo
          this.setData({
            userInfo: res.userInfo,
            hasUserInfo: true
          })
        }
      })
    }
  },
  getUserInfo: function(e) {
    console.log(e)
    app.globalData.userInfo = e.detail.userInfo
    this.setData({
      userInfo: e.detail.userInfo,
      hasUserInfo: true
    })
  }
}
</script>

<style lang="less">
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 128rpx;
  height: 128rpx;
  margin: 20rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
  font-size:15px;
}

.usermotto {
  margin-top: 30px;
  font-size: 12px;
}
.comment{
  width: 140rpx;
  height: 140rpx;
  margin: 20rpx;
}
page { 
  overflow:hidden; 
  position:fixed; 
  background-image: url('https://kindlestatic-1255693559.cos.ap-guangzhou.myqcloud.com/index.png'); 
  margin: 0px; 
  background-size: 100% 100%; 
} 
</style>